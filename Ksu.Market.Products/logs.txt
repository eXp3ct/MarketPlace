[19:59:46 Information] MassTransit
Configured endpoint delete-product-required, Consumer: Ksu.Market.Products.Consumers.DeleteProductRequiredConsumer

[19:59:46 Information] MassTransit
Configured endpoint get-paged-list-required, Consumer: Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer

[19:59:46 Information] MassTransit
Configured endpoint get-product-by-id-required, Consumer: Ksu.Market.Products.Consumers.GetProductByIdRequiredConsumer

[19:59:46 Information] MassTransit
Configured endpoint product-created, Consumer: Ksu.Market.Products.Consumers.ProductCreatedConsumer

[19:59:46 Information] MassTransit
Configured endpoint update-product-required, Consumer: Ksu.Market.Products.Consumers.UpdateProductRequiredConsumer

[19:59:47 Information] Microsoft.Hosting.Lifetime
Now listening on: http://[::]:80

[19:59:47 Information] Microsoft.Hosting.Lifetime
Application started. Press Ctrl+C to shut down.

[19:59:47 Information] Microsoft.Hosting.Lifetime
Hosting environment: Development

[19:59:47 Information] Microsoft.Hosting.Lifetime
Content root path: /app

[19:59:49 Information] MassTransit
Bus started: "rabbitmq://market-rabbitmq/"

[19:59:57 Warning] Microsoft.EntityFrameworkCore.Query
The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.

[19:59:57 Warning] Microsoft.EntityFrameworkCore.Query
The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.

[19:59:57 Information] Microsoft.EntityFrameworkCore.Database.Command
Executed DbCommand (40ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0

[19:59:57 Information] Ksu.Market.Data.Repositories.BaseRepository
Get paged list p-1, s-11 of type Product from database

[19:59:57 Information] Ksu.Market.Infrastructure.Behavior.LoggingBehavior
Operation result Ksu.Market.Domain.Results.OperationResult

[20:01:39 Information] MassTransit
Configured endpoint delete-product-required, Consumer: Ksu.Market.Products.Consumers.DeleteProductRequiredConsumer

[20:01:39 Information] MassTransit
Configured endpoint get-paged-list-required, Consumer: Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer

[20:01:39 Information] MassTransit
Configured endpoint get-product-by-id-required, Consumer: Ksu.Market.Products.Consumers.GetProductByIdRequiredConsumer

[20:01:39 Information] MassTransit
Configured endpoint product-created, Consumer: Ksu.Market.Products.Consumers.ProductCreatedConsumer

[20:01:39 Information] MassTransit
Configured endpoint update-product-required, Consumer: Ksu.Market.Products.Consumers.UpdateProductRequiredConsumer

[20:01:39 Information] Microsoft.Hosting.Lifetime
Now listening on: http://[::]:80

[20:01:39 Information] Microsoft.Hosting.Lifetime
Application started. Press Ctrl+C to shut down.

[20:01:39 Information] Microsoft.Hosting.Lifetime
Hosting environment: Development

[20:01:39 Information] Microsoft.Hosting.Lifetime
Content root path: /app

[20:01:41 Information] MassTransit
Bus started: "rabbitmq://market-rabbitmq/"

[20:01:47 Warning] Microsoft.EntityFrameworkCore.Query
The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.

[20:01:47 Warning] Microsoft.EntityFrameworkCore.Query
The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.

[20:01:47 Information] Microsoft.EntityFrameworkCore.Database.Command
Executed DbCommand (49ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0

[20:01:47 Information] Ksu.Market.Data.Repositories.BaseRepository
Get paged list p-1, s-11 of type Product from database

[20:01:47 Information] Ksu.Market.Infrastructure.Behavior.LoggingBehavior
Operation result Ksu.Market.Domain.Results.OperationResult

[20:01:57 Information] Microsoft.EntityFrameworkCore.Database.Command
Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
WHERE p."Id" = @__id_0
LIMIT 1

[20:01:57 Information] Ksu.Market.Data.Repositories.BaseRepository
Get Product by id "386ac9bd-c0bb-41ed-b66d-37742cc9ae93" from database

[20:01:57 Information] Ksu.Market.Infrastructure.Behavior.LoggingBehavior
Operation result Ksu.Market.Domain.Results.OperationResult

[20:02:23 Information] Microsoft.EntityFrameworkCore.Database.Command
Executed DbCommand (15ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
WHERE p."Id" = @__id_0
LIMIT 1

[20:02:23 Information] Ksu.Market.Data.Repositories.BaseRepository
Get Product by id "386ac9bd-c0bb-41ed-b66d-37742cc9ae93" from database

[20:02:23 Information] Microsoft.EntityFrameworkCore.Database.Command
Executed DbCommand (36ms) [Parameters=[@p4='?' (DbType = Guid), @p0='?' (DbType = DateTime), @p1='?', @p2='?', @p3='?' (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Products" SET "DateChanged" = @p0, "Description" = @p1, "Name" = @p2, "Price" = @p3
WHERE "Id" = @p4;

[20:02:23 Information] Ksu.Market.Infrastructure.Behavior.LoggingBehavior
Operation result Ksu.Market.Domain.Results.OperationResult

[20:02:34 Information] Microsoft.EntityFrameworkCore.Database.Command
Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
WHERE p."Id" = @__id_0
LIMIT 1

[20:02:34 Information] Ksu.Market.Data.Repositories.BaseRepository
Get Product by id "386ac9bd-c0bb-41ed-b66d-37742cc9ae93" from database

[20:02:34 Information] Ksu.Market.Infrastructure.Behavior.LoggingBehavior
Operation result Ksu.Market.Domain.Results.OperationResult

[20:02:50 Information] Microsoft.EntityFrameworkCore.Database.Command
Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
WHERE p."Id" = @__id_0
LIMIT 1

[20:02:50 Information] Ksu.Market.Data.Repositories.BaseRepository
Get Product by id "386ac9bd-c0bb-41ed-b66d-37742cc9ae93" from database

[20:02:50 Information] Ksu.Market.Infrastructure.Behavior.LoggingBehavior
Operation result Ksu.Market.Domain.Results.OperationResult

[20:02:54 Information] Microsoft.EntityFrameworkCore.Database.Command
Executed DbCommand (17ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0

[20:02:54 Information] Ksu.Market.Data.Repositories.BaseRepository
Get paged list p-1, s-11 of type Product from database

[20:02:54 Information] Ksu.Market.Infrastructure.Behavior.LoggingBehavior
Operation result Ksu.Market.Domain.Results.OperationResult

[19:55:06 Information] MassTransit
Configured endpoint delete-product-required, Consumer: Ksu.Market.Products.Consumers.DeleteProductRequiredConsumer

[19:55:06 Information] MassTransit
Configured endpoint get-paged-list-required, Consumer: Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer

[19:55:06 Information] MassTransit
Configured endpoint get-product-by-id-required, Consumer: Ksu.Market.Products.Consumers.GetProductByIdRequiredConsumer

[19:55:06 Information] MassTransit
Configured endpoint product-created, Consumer: Ksu.Market.Products.Consumers.ProductCreatedConsumer

[19:55:06 Information] MassTransit
Configured endpoint update-product-required, Consumer: Ksu.Market.Products.Consumers.UpdateProductRequiredConsumer

[19:55:06 Information] Microsoft.Hosting.Lifetime
Now listening on: http://[::]:80

[19:55:06 Information] Microsoft.Hosting.Lifetime
Application started. Press Ctrl+C to shut down.

[19:55:06 Information] Microsoft.Hosting.Lifetime
Hosting environment: Development

[19:55:06 Information] Microsoft.Hosting.Lifetime
Content root path: /app

[19:55:08 Information] MassTransit
Bus started: "rabbitmq://market-rabbitmq/"

[19:57:32 Information] MassTransit
Configured endpoint delete-product-required, Consumer: Ksu.Market.Products.Consumers.DeleteProductRequiredConsumer

[19:57:32 Information] MassTransit
Configured endpoint get-paged-list-required, Consumer: Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer

[19:57:32 Information] MassTransit
Configured endpoint get-product-by-id-required, Consumer: Ksu.Market.Products.Consumers.GetProductByIdRequiredConsumer

[19:57:32 Information] MassTransit
Configured endpoint product-created, Consumer: Ksu.Market.Products.Consumers.ProductCreatedConsumer

[19:57:32 Information] MassTransit
Configured endpoint update-product-required, Consumer: Ksu.Market.Products.Consumers.UpdateProductRequiredConsumer

[19:57:32 Information] Microsoft.Hosting.Lifetime
Now listening on: http://[::]:80

[19:57:32 Information] Microsoft.Hosting.Lifetime
Application started. Press Ctrl+C to shut down.

[19:57:32 Information] Microsoft.Hosting.Lifetime
Hosting environment: Development

[19:57:32 Information] Microsoft.Hosting.Lifetime
Content root path: /app

[19:57:34 Information] MassTransit
Bus started: "rabbitmq://market-rabbitmq/"

[19:57:49 Warning] Microsoft.EntityFrameworkCore.Query
The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.

[19:57:49 Warning] Microsoft.EntityFrameworkCore.Query
The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.

[19:57:50 Information] Microsoft.EntityFrameworkCore.Database.Command
Executed DbCommand (50ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0

[19:57:50 Information] Ksu.Market.Data.Repositories.BaseRepository
Get paged list p-1, s-11 of type Product from database

[19:57:50 Information] Ksu.Market.Infrastructure.Behavior.LoggingBehavior
Operation result Ksu.Market.Domain.Results.OperationResult

[19:58:03 Information] Microsoft.EntityFrameworkCore.Database.Command
Executed DbCommand (14ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
WHERE p."Id" = @__id_0
LIMIT 1

[19:58:03 Information] Ksu.Market.Data.Repositories.BaseRepository
Get Product by id "6b81d6b1-fefd-4147-9589-37d1f3df96f9" from database

[19:58:03 Information] Ksu.Market.Infrastructure.Behavior.LoggingBehavior
Operation result Ksu.Market.Domain.Results.OperationResult

[20:19:01 Information] MassTransit
Configured endpoint delete-product-required, Consumer: Ksu.Market.Products.Consumers.DeleteProductRequiredConsumer

[20:19:01 Information] MassTransit
Configured endpoint get-paged-list-required, Consumer: Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer

[20:19:01 Information] MassTransit
Configured endpoint get-product-by-id-required, Consumer: Ksu.Market.Products.Consumers.GetProductByIdRequiredConsumer

[20:19:01 Information] MassTransit
Configured endpoint product-created, Consumer: Ksu.Market.Products.Consumers.ProductCreatedConsumer

[20:19:01 Information] MassTransit
Configured endpoint update-product-required, Consumer: Ksu.Market.Products.Consumers.UpdateProductRequiredConsumer

[20:19:01 Information] Microsoft.Hosting.Lifetime
Now listening on: http://[::]:80

[20:19:01 Information] Microsoft.Hosting.Lifetime
Application started. Press Ctrl+C to shut down.

[20:19:01 Information] Microsoft.Hosting.Lifetime
Hosting environment: Development

[20:19:01 Information] Microsoft.Hosting.Lifetime
Content root path: /app

[20:19:03 Information] MassTransit
Bus started: "rabbitmq://market-rabbitmq/"

[20:20:00 Information] MassTransit
Configured endpoint delete-product-required, Consumer: Ksu.Market.Products.Consumers.DeleteProductRequiredConsumer

[20:20:00 Information] MassTransit
Configured endpoint get-paged-list-required, Consumer: Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer

[20:20:00 Information] MassTransit
Configured endpoint get-product-by-id-required, Consumer: Ksu.Market.Products.Consumers.GetProductByIdRequiredConsumer

[20:20:00 Information] MassTransit
Configured endpoint product-created, Consumer: Ksu.Market.Products.Consumers.ProductCreatedConsumer

[20:20:00 Information] MassTransit
Configured endpoint update-product-required, Consumer: Ksu.Market.Products.Consumers.UpdateProductRequiredConsumer

[20:20:01 Information] Microsoft.Hosting.Lifetime
Now listening on: http://[::]:80

[20:20:01 Information] Microsoft.Hosting.Lifetime
Application started. Press Ctrl+C to shut down.

[20:20:01 Information] Microsoft.Hosting.Lifetime
Hosting environment: Development

[20:20:01 Information] Microsoft.Hosting.Lifetime
Content root path: /app

[20:20:02 Information] MassTransit
Bus started: "rabbitmq://market-rabbitmq/"

[20:20:44 Information] MassTransit
Configured endpoint delete-product-required, Consumer: Ksu.Market.Products.Consumers.DeleteProductRequiredConsumer

[20:20:44 Information] MassTransit
Configured endpoint get-paged-list-required, Consumer: Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer

[20:20:44 Information] MassTransit
Configured endpoint get-product-by-id-required, Consumer: Ksu.Market.Products.Consumers.GetProductByIdRequiredConsumer

[20:20:44 Information] MassTransit
Configured endpoint product-created, Consumer: Ksu.Market.Products.Consumers.ProductCreatedConsumer

[20:20:44 Information] MassTransit
Configured endpoint update-product-required, Consumer: Ksu.Market.Products.Consumers.UpdateProductRequiredConsumer

[20:20:44 Information] Microsoft.Hosting.Lifetime
Now listening on: http://[::]:80

[20:20:44 Information] Microsoft.Hosting.Lifetime
Application started. Press Ctrl+C to shut down.

[20:20:44 Information] Microsoft.Hosting.Lifetime
Hosting environment: Development

[20:20:44 Information] Microsoft.Hosting.Lifetime
Content root path: /app

[20:20:46 Information] MassTransit
Bus started: "rabbitmq://market-rabbitmq/"

[20:22:40 Information] MassTransit
Configured endpoint delete-product-required, Consumer: Ksu.Market.Products.Consumers.DeleteProductRequiredConsumer

[20:22:40 Information] MassTransit
Configured endpoint get-paged-list-required, Consumer: Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer

[20:22:40 Information] MassTransit
Configured endpoint get-product-by-id-required, Consumer: Ksu.Market.Products.Consumers.GetProductByIdRequiredConsumer

[20:22:40 Information] MassTransit
Configured endpoint product-created, Consumer: Ksu.Market.Products.Consumers.ProductCreatedConsumer

[20:22:40 Information] MassTransit
Configured endpoint update-product-required, Consumer: Ksu.Market.Products.Consumers.UpdateProductRequiredConsumer

[20:22:40 Information] Microsoft.Hosting.Lifetime
Now listening on: http://[::]:80

[20:22:40 Information] Microsoft.Hosting.Lifetime
Application started. Press Ctrl+C to shut down.

[20:22:40 Information] Microsoft.Hosting.Lifetime
Hosting environment: Development

[20:22:40 Information] Microsoft.Hosting.Lifetime
Content root path: /app

[20:22:42 Information] MassTransit
Bus started: "rabbitmq://market-rabbitmq/"

[20:23:36 Information] MassTransit
Configured endpoint delete-product-required, Consumer: Ksu.Market.Products.Consumers.DeleteProductRequiredConsumer

[20:23:36 Information] MassTransit
Configured endpoint get-paged-list-required, Consumer: Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer

[20:23:36 Information] MassTransit
Configured endpoint get-product-by-id-required, Consumer: Ksu.Market.Products.Consumers.GetProductByIdRequiredConsumer

[20:23:36 Information] MassTransit
Configured endpoint product-created, Consumer: Ksu.Market.Products.Consumers.ProductCreatedConsumer

[20:23:36 Information] MassTransit
Configured endpoint update-product-required, Consumer: Ksu.Market.Products.Consumers.UpdateProductRequiredConsumer

[20:23:37 Information] Microsoft.Hosting.Lifetime
Now listening on: http://[::]:80

[20:23:37 Information] Microsoft.Hosting.Lifetime
Application started. Press Ctrl+C to shut down.

[20:23:37 Information] Microsoft.Hosting.Lifetime
Hosting environment: Development

[20:23:37 Information] Microsoft.Hosting.Lifetime
Content root path: /app

[20:23:38 Information] MassTransit
Bus started: "rabbitmq://market-rabbitmq/"

[20:24:44 Information] MassTransit
Configured endpoint delete-product-required, Consumer: Ksu.Market.Products.Consumers.DeleteProductRequiredConsumer

[20:24:44 Information] MassTransit
Configured endpoint get-paged-list-required, Consumer: Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer

[20:24:44 Information] MassTransit
Configured endpoint get-product-by-id-required, Consumer: Ksu.Market.Products.Consumers.GetProductByIdRequiredConsumer

[20:24:44 Information] MassTransit
Configured endpoint product-created, Consumer: Ksu.Market.Products.Consumers.ProductCreatedConsumer

[20:24:44 Information] MassTransit
Configured endpoint update-product-required, Consumer: Ksu.Market.Products.Consumers.UpdateProductRequiredConsumer

[20:24:44 Information] Microsoft.Hosting.Lifetime
Now listening on: http://[::]:80

[20:24:44 Information] Microsoft.Hosting.Lifetime
Application started. Press Ctrl+C to shut down.

[20:24:44 Information] Microsoft.Hosting.Lifetime
Hosting environment: Development

[20:24:44 Information] Microsoft.Hosting.Lifetime
Content root path: /app

[20:24:46 Information] MassTransit
Bus started: "rabbitmq://market-rabbitmq/"

[20:30:19 Information] MassTransit
Configured endpoint delete-product-required, Consumer: Ksu.Market.Products.Consumers.DeleteProductRequiredConsumer

[20:30:19 Information] MassTransit
Configured endpoint get-paged-list-required, Consumer: Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer

[20:30:19 Information] MassTransit
Configured endpoint get-product-by-id-required, Consumer: Ksu.Market.Products.Consumers.GetProductByIdRequiredConsumer

[20:30:19 Information] MassTransit
Configured endpoint product-created, Consumer: Ksu.Market.Products.Consumers.ProductCreatedConsumer

[20:30:19 Information] MassTransit
Configured endpoint update-product-required, Consumer: Ksu.Market.Products.Consumers.UpdateProductRequiredConsumer

[20:30:20 Information] Microsoft.Hosting.Lifetime
Now listening on: http://[::]:80

[20:30:20 Information] Microsoft.Hosting.Lifetime
Application started. Press Ctrl+C to shut down.

[20:30:20 Information] Microsoft.Hosting.Lifetime
Hosting environment: Development

[20:30:20 Information] Microsoft.Hosting.Lifetime
Content root path: /app

[20:30:22 Information] MassTransit
Bus started: "rabbitmq://market-rabbitmq/"

[20:41:40 Information] MassTransit
Configured endpoint delete-product-required, Consumer: Ksu.Market.Products.Consumers.DeleteProductRequiredConsumer

[20:41:40 Information] MassTransit
Configured endpoint get-paged-list-required, Consumer: Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer

[20:41:40 Information] MassTransit
Configured endpoint get-product-by-id-required, Consumer: Ksu.Market.Products.Consumers.GetProductByIdRequiredConsumer

[20:41:40 Information] MassTransit
Configured endpoint product-created, Consumer: Ksu.Market.Products.Consumers.ProductCreatedConsumer

[20:41:40 Information] MassTransit
Configured endpoint update-product-required, Consumer: Ksu.Market.Products.Consumers.UpdateProductRequiredConsumer

[20:41:41 Information] Microsoft.Hosting.Lifetime
Now listening on: http://[::]:80

[20:41:41 Information] Microsoft.Hosting.Lifetime
Application started. Press Ctrl+C to shut down.

[20:41:41 Information] Microsoft.Hosting.Lifetime
Hosting environment: Development

[20:41:41 Information] Microsoft.Hosting.Lifetime
Content root path: /app

[20:41:43 Information] MassTransit
Bus started: "rabbitmq://market-rabbitmq/"

[23:21:44 Information] MassTransit
Configured endpoint delete-product-required, Consumer: Ksu.Market.Products.Consumers.DeleteProductRequiredConsumer

[23:21:44 Information] MassTransit
Configured endpoint get-paged-list-required, Consumer: Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer

[23:21:44 Information] MassTransit
Configured endpoint get-product-by-id-required, Consumer: Ksu.Market.Products.Consumers.GetProductByIdRequiredConsumer

[23:21:44 Information] MassTransit
Configured endpoint product-created, Consumer: Ksu.Market.Products.Consumers.ProductCreatedConsumer

[23:21:44 Information] MassTransit
Configured endpoint update-product-required, Consumer: Ksu.Market.Products.Consumers.UpdateProductRequiredConsumer

[23:21:45 Information] Microsoft.Hosting.Lifetime
Now listening on: http://[::]:80

[23:21:45 Information] Microsoft.Hosting.Lifetime
Application started. Press Ctrl+C to shut down.

[23:21:45 Information] Microsoft.Hosting.Lifetime
Hosting environment: Development

[23:21:45 Information] Microsoft.Hosting.Lifetime
Content root path: /app

[23:21:48 Information] MassTransit
Bus started: "rabbitmq://market-rabbitmq/"

[23:21:56 Warning] Microsoft.EntityFrameworkCore.Query
The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.

[23:21:56 Warning] Microsoft.EntityFrameworkCore.Query
The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.

[23:21:57 Error] Microsoft.EntityFrameworkCore.Database.Command
Failed executing DbCommand (57ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0

[23:21:57 Error] Microsoft.EntityFrameworkCore.Query
An exception occurred while iterating over the results of a query for context type 'Ksu.Market.Data.Contexts.AppDbContext'.
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable

[23:21:57 Warning] MassTransit.ReceiveTransport
R-RETRY "rabbitmq://market-rabbitmq/get-paged-list-required" "77000000-ac14-0242-e037-08dc1ad7c09b" MassTransit.RetryPolicies.RetryConsumeContext<Ksu.Market.Domain.Contracts.IGetProductPagedListRequired>
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Ksu.Market.Data.Repositories.BaseRepository`1.GetListAsync(Int32 page, Int32 pageSize, CancellationToken canecllationToken) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Data\Repositories\BaseRepository.cs:line 54
   at Ksu.Market.Infrastructure.Commands.Consuming.GetPagedList.GetPagedListConsumingQueryHandler.Handle(GetPagedListConsumingQuery request, CancellationToken cancellationToken) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Infrastructure\Commands\Consuming\GetPagedList\GetPagedListConsumingQueryHandler.cs:line 21
   at Ksu.Market.Infrastructure.Behavior.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Infrastructure\Behavior\LoggingBehavior.cs:line 19
   at Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer.Consume(ConsumeContext`1 context) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Products\Consumers\GetPagedListRequiredConsumer.cs:line 21
   at MassTransit.DependencyInjection.ScopeConsumerFactory`1.Send[TMessage](ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/DependencyInjection/DependencyInjection/ScopeConsumerFactory.cs:line 22
   at MassTransit.DependencyInjection.ScopeConsumerFactory`1.Send[TMessage](ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/DependencyInjection/DependencyInjection/ScopeConsumerFactory.cs:line 22
   at MassTransit.Middleware.ConsumerMessageFilter`2.MassTransit.IFilter<MassTransit.ConsumeContext<TMessage>>.Send(ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/Middleware/ConsumerMessageFilter.cs:line 48
   at MassTransit.Middleware.ConsumerMessageFilter`2.MassTransit.IFilter<MassTransit.ConsumeContext<TMessage>>.Send(ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/Middleware/ConsumerMessageFilter.cs:line 72
   at MassTransit.Middleware.RetryFilter`1.MassTransit.IFilter<TContext>.Send(TContext context, IPipe`1 next) in /_/src/MassTransit/Middleware/RetryFilter.cs:line 47
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable

[23:21:58 Error] Microsoft.EntityFrameworkCore.Database.Command
Failed executing DbCommand (25ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0

[23:21:58 Error] Microsoft.EntityFrameworkCore.Query
An exception occurred while iterating over the results of a query for context type 'Ksu.Market.Data.Contexts.AppDbContext'.
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable

[23:22:00 Error] Microsoft.EntityFrameworkCore.Database.Command
Failed executing DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0

[23:22:00 Error] Microsoft.EntityFrameworkCore.Query
An exception occurred while iterating over the results of a query for context type 'Ksu.Market.Data.Contexts.AppDbContext'.
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable

[23:22:03 Error] Microsoft.EntityFrameworkCore.Database.Command
Failed executing DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0

[23:22:03 Error] Microsoft.EntityFrameworkCore.Query
An exception occurred while iterating over the results of a query for context type 'Ksu.Market.Data.Contexts.AppDbContext'.
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable

[23:22:03 Error] MassTransit.ReceiveTransport
R-FAULT "rabbitmq://market-rabbitmq/get-paged-list-required" "77000000-ac14-0242-e037-08dc1ad7c09b" Ksu.Market.Domain.Contracts.IGetProductPagedListRequired Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer("00:00:00.0121742")
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Ksu.Market.Data.Repositories.BaseRepository`1.GetListAsync(Int32 page, Int32 pageSize, CancellationToken canecllationToken) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Data\Repositories\BaseRepository.cs:line 54
   at Ksu.Market.Infrastructure.Commands.Consuming.GetPagedList.GetPagedListConsumingQueryHandler.Handle(GetPagedListConsumingQuery request, CancellationToken cancellationToken) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Infrastructure\Commands\Consuming\GetPagedList\GetPagedListConsumingQueryHandler.cs:line 21
   at Ksu.Market.Infrastructure.Behavior.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Infrastructure\Behavior\LoggingBehavior.cs:line 19
   at Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer.Consume(ConsumeContext`1 context) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Products\Consumers\GetPagedListRequiredConsumer.cs:line 21
   at MassTransit.DependencyInjection.ScopeConsumerFactory`1.Send[TMessage](ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/DependencyInjection/DependencyInjection/ScopeConsumerFactory.cs:line 22
   at MassTransit.DependencyInjection.ScopeConsumerFactory`1.Send[TMessage](ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/DependencyInjection/DependencyInjection/ScopeConsumerFactory.cs:line 22
   at MassTransit.Middleware.ConsumerMessageFilter`2.MassTransit.IFilter<MassTransit.ConsumeContext<TMessage>>.Send(ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/Middleware/ConsumerMessageFilter.cs:line 48
   at MassTransit.Middleware.ConsumerMessageFilter`2.MassTransit.IFilter<MassTransit.ConsumeContext<TMessage>>.Send(ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/Middleware/ConsumerMessageFilter.cs:line 72
   at MassTransit.Middleware.RetryFilter`1.Attempt(TContext context, RetryContext`1 retryContext, IPipe`1 next) in /_/src/MassTransit/Middleware/RetryFilter.cs:line 158
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable

[23:23:25 Information] MassTransit
Configured endpoint delete-product-required, Consumer: Ksu.Market.Products.Consumers.DeleteProductRequiredConsumer

[23:23:25 Information] MassTransit
Configured endpoint get-paged-list-required, Consumer: Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer

[23:23:25 Information] MassTransit
Configured endpoint get-product-by-id-required, Consumer: Ksu.Market.Products.Consumers.GetProductByIdRequiredConsumer

[23:23:25 Information] MassTransit
Configured endpoint product-created, Consumer: Ksu.Market.Products.Consumers.ProductCreatedConsumer

[23:23:25 Information] MassTransit
Configured endpoint update-product-required, Consumer: Ksu.Market.Products.Consumers.UpdateProductRequiredConsumer

[23:23:26 Information] Microsoft.Hosting.Lifetime
Now listening on: http://[::]:80

[23:23:26 Information] Microsoft.Hosting.Lifetime
Application started. Press Ctrl+C to shut down.

[23:23:26 Information] Microsoft.Hosting.Lifetime
Hosting environment: Development

[23:23:26 Information] Microsoft.Hosting.Lifetime
Content root path: /app

[23:23:28 Information] MassTransit
Bus started: "rabbitmq://market-rabbitmq/"

[23:23:51 Warning] Microsoft.EntityFrameworkCore.Query
The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.

[23:23:51 Warning] Microsoft.EntityFrameworkCore.Query
The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.

[23:23:52 Error] Microsoft.EntityFrameworkCore.Database.Command
Failed executing DbCommand (49ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0

[23:23:52 Error] Microsoft.EntityFrameworkCore.Query
An exception occurred while iterating over the results of a query for context type 'Ksu.Market.Data.Contexts.AppDbContext'.
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable

[23:23:52 Warning] MassTransit.ReceiveTransport
R-RETRY "rabbitmq://market-rabbitmq/get-paged-list-required" "c1000000-ac14-0242-8290-08dc1ad805e0" MassTransit.RetryPolicies.RetryConsumeContext<Ksu.Market.Domain.Contracts.IGetProductPagedListRequired>
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Ksu.Market.Data.Repositories.BaseRepository`1.GetListAsync(Int32 page, Int32 pageSize, CancellationToken canecllationToken) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Data\Repositories\BaseRepository.cs:line 54
   at Ksu.Market.Infrastructure.Commands.Consuming.GetPagedList.GetPagedListConsumingQueryHandler.Handle(GetPagedListConsumingQuery request, CancellationToken cancellationToken) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Infrastructure\Commands\Consuming\GetPagedList\GetPagedListConsumingQueryHandler.cs:line 21
   at Ksu.Market.Infrastructure.Behavior.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Infrastructure\Behavior\LoggingBehavior.cs:line 19
   at Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer.Consume(ConsumeContext`1 context) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Products\Consumers\GetPagedListRequiredConsumer.cs:line 21
   at MassTransit.DependencyInjection.ScopeConsumerFactory`1.Send[TMessage](ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/DependencyInjection/DependencyInjection/ScopeConsumerFactory.cs:line 22
   at MassTransit.DependencyInjection.ScopeConsumerFactory`1.Send[TMessage](ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/DependencyInjection/DependencyInjection/ScopeConsumerFactory.cs:line 22
   at MassTransit.Middleware.ConsumerMessageFilter`2.MassTransit.IFilter<MassTransit.ConsumeContext<TMessage>>.Send(ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/Middleware/ConsumerMessageFilter.cs:line 48
   at MassTransit.Middleware.ConsumerMessageFilter`2.MassTransit.IFilter<MassTransit.ConsumeContext<TMessage>>.Send(ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/Middleware/ConsumerMessageFilter.cs:line 72
   at MassTransit.Middleware.RetryFilter`1.MassTransit.IFilter<TContext>.Send(TContext context, IPipe`1 next) in /_/src/MassTransit/Middleware/RetryFilter.cs:line 47
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable

[23:23:53 Error] Microsoft.EntityFrameworkCore.Database.Command
Failed executing DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0

[23:23:53 Error] Microsoft.EntityFrameworkCore.Query
An exception occurred while iterating over the results of a query for context type 'Ksu.Market.Data.Contexts.AppDbContext'.
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable

[23:23:55 Error] Microsoft.EntityFrameworkCore.Database.Command
Failed executing DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0

[23:23:55 Error] Microsoft.EntityFrameworkCore.Query
An exception occurred while iterating over the results of a query for context type 'Ksu.Market.Data.Contexts.AppDbContext'.
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable

[23:23:58 Error] Microsoft.EntityFrameworkCore.Database.Command
Failed executing DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0

[23:23:58 Error] Microsoft.EntityFrameworkCore.Query
An exception occurred while iterating over the results of a query for context type 'Ksu.Market.Data.Contexts.AppDbContext'.
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable

[23:23:58 Error] MassTransit.ReceiveTransport
R-FAULT "rabbitmq://market-rabbitmq/get-paged-list-required" "c1000000-ac14-0242-8290-08dc1ad805e0" Ksu.Market.Domain.Contracts.IGetProductPagedListRequired Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer("00:00:00.0155798")
Npgsql.PostgresException (0x80004005): 42P01: relation "Products" does not exist

POSITION: 106
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|234_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Ksu.Market.Data.Repositories.BaseRepository`1.GetListAsync(Int32 page, Int32 pageSize, CancellationToken canecllationToken) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Data\Repositories\BaseRepository.cs:line 54
   at Ksu.Market.Infrastructure.Commands.Consuming.GetPagedList.GetPagedListConsumingQueryHandler.Handle(GetPagedListConsumingQuery request, CancellationToken cancellationToken) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Infrastructure\Commands\Consuming\GetPagedList\GetPagedListConsumingQueryHandler.cs:line 21
   at Ksu.Market.Infrastructure.Behavior.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Infrastructure\Behavior\LoggingBehavior.cs:line 19
   at Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer.Consume(ConsumeContext`1 context) in D:\Projects\C# Projects\MarketPlace\Ksu.Market.Products\Consumers\GetPagedListRequiredConsumer.cs:line 21
   at MassTransit.DependencyInjection.ScopeConsumerFactory`1.Send[TMessage](ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/DependencyInjection/DependencyInjection/ScopeConsumerFactory.cs:line 22
   at MassTransit.DependencyInjection.ScopeConsumerFactory`1.Send[TMessage](ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/DependencyInjection/DependencyInjection/ScopeConsumerFactory.cs:line 22
   at MassTransit.Middleware.ConsumerMessageFilter`2.MassTransit.IFilter<MassTransit.ConsumeContext<TMessage>>.Send(ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/Middleware/ConsumerMessageFilter.cs:line 48
   at MassTransit.Middleware.ConsumerMessageFilter`2.MassTransit.IFilter<MassTransit.ConsumeContext<TMessage>>.Send(ConsumeContext`1 context, IPipe`1 next) in /_/src/MassTransit/Middleware/ConsumerMessageFilter.cs:line 72
   at MassTransit.Middleware.RetryFilter`1.Attempt(TContext context, RetryContext`1 retryContext, IPipe`1 next) in /_/src/MassTransit/Middleware/RetryFilter.cs:line 158
  Exception data:
    Severity: ERROR
    SqlState: 42P01
    MessageText: relation "Products" does not exist
    Position: 106
    File: parse_relation.c
    Line: 1392
    Routine: parserOpenTable

[23:26:18 Information] MassTransit
Configured endpoint delete-product-required, Consumer: Ksu.Market.Products.Consumers.DeleteProductRequiredConsumer

[23:26:18 Information] MassTransit
Configured endpoint get-paged-list-required, Consumer: Ksu.Market.Products.Consumers.GetPagedListRequiredConsumer

[23:26:18 Information] MassTransit
Configured endpoint get-product-by-id-required, Consumer: Ksu.Market.Products.Consumers.GetProductByIdRequiredConsumer

[23:26:18 Information] MassTransit
Configured endpoint product-created, Consumer: Ksu.Market.Products.Consumers.ProductCreatedConsumer

[23:26:18 Information] MassTransit
Configured endpoint update-product-required, Consumer: Ksu.Market.Products.Consumers.UpdateProductRequiredConsumer

[23:26:19 Information] Microsoft.Hosting.Lifetime
Now listening on: http://[::]:80

[23:26:19 Information] Microsoft.Hosting.Lifetime
Application started. Press Ctrl+C to shut down.

[23:26:19 Information] Microsoft.Hosting.Lifetime
Hosting environment: Development

[23:26:19 Information] Microsoft.Hosting.Lifetime
Content root path: /app

[23:26:21 Information] MassTransit
Bus started: "rabbitmq://market-rabbitmq/"

[23:26:31 Warning] Microsoft.EntityFrameworkCore.Query
The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.

[23:26:31 Warning] Microsoft.EntityFrameworkCore.Query
The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.

[23:26:32 Information] Microsoft.EntityFrameworkCore.Database.Command
Executed DbCommand (49ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."DateChanged", p."DatePublished", p."Description", p."Name", p."Price", p."Rating"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0

[23:26:32 Information] Ksu.Market.Data.Repositories.BaseRepository
Get paged list p-1, s-11 of type Product from database

[23:26:32 Information] Ksu.Market.Infrastructure.Behavior.LoggingBehavior
Operation result Ksu.Market.Domain.Results.OperationResult

